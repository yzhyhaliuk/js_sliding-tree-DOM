{"mappings":"ACEA,IAAM,EAAQ,SAAS,gBAAgB,CAAC,MAClC,EAAO,SAAS,aAAa,CAAC,SAE/B,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAqB,CAArB,IAAM,EAAN,EAAA,KAAA,CACG,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAK,OAAO,CAAC,GACb,EAAK,MAAM,CAAC,EAAK,WAAW,CAC9B,C,C,M,E,CALK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOL,EAAK,OAAO,CAAG,SAAC,CAAhB,EACE,GAAI,AAAqB,SAArB,EAAE,MAAM,CAAC,OAAO,EAIpB,IAAM,EAAoB,EAAE,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,KAE5D,CAAA,EAAkB,MAAM,CAAG,CAAC,EAAkB,MAAM,CACtD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar items = document.querySelectorAll(\"li\");\nvar tree = document.querySelector(\".tree\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var item = _step.value;\n        var span = document.createElement(\"span\");\n        item.prepend(span);\n        span.append(span.nextSibling);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\ntree.onclick = function(e) {\n    if (e.target.tagName !== \"SPAN\") return;\n    var childrenContainer = e.target.parentNode.querySelector(\"ul\");\n    childrenContainer.hidden = !childrenContainer.hidden;\n};\n\n//# sourceMappingURL=index.527c46fa.js.map\n","'use strict';\n\nconst items = document.querySelectorAll('li');\nconst tree = document.querySelector('.tree');\n\nfor (const item of items) {\n  const span = document.createElement('span');\n\n  item.prepend(span);\n  span.append(span.nextSibling);\n}\n\ntree.onclick = (e) => {\n  if (e.target.tagName !== 'SPAN') {\n    return;\n  }\n\n  const childrenContainer = e.target.parentNode.querySelector('ul');\n\n  childrenContainer.hidden = !childrenContainer.hidden;\n};\n"],"names":["items","document","querySelectorAll","tree","querySelector","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","span","createElement","prepend","append","nextSibling","err","return","onclick","e","target","tagName","childrenContainer","parentNode","hidden"],"version":3,"file":"index.527c46fa.js.map"}